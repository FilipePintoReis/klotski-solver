{"version":3,"sources":["app/map.js","app/index.js","serviceWorker.js","index.js"],"names":["MULTIPLIER","Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","timeout","plays","index","state","setTimeout","length","setState","board","renderGrid","grid","i","height","push","react_default","a","createElement","ReactKonva","key","concat","x","y","points","stroke","j","width","renderMap","element","pieces","forEach","piece","x1","y1","fill","color","shadowBlur","Container","fluid","style","padding","React","Component","maps","easyMap","test","test2","easy21","hard","hard2","body","backgroundColor","minHeight","header","marginBottom","headerText","menu","borderColor","menuHeader","fontSize","loadingContainer","display","alignItems","justifyContent","game","Klotski","App","loading","method","map","solved","createGame","selectMethod","_this$state","selectMap","_this$state2","runSearch","_callee","_this$state3","regenerator_default","wrap","_context","prev","next","t0","createEasyBoard","abrupt","createTestBoard","createTest2Board","create21Board","createHardBoard","createHard2Board","Error","solve","stop","_this2","_this$state4","textAlign","Header","as","Grid","columns","Column","Menu","vertical","Item","active","methods","breadthFirst","onClick","depthFirstSearch","iterativeDeepening","depthLimitedSearch","greedySearch","aStar","Segment","react_loading_default","type","app_map","Button","disabled","Boolean","window","location","hostname","match","ReactDOM","render","app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e15c7cd7.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container } from \"semantic-ui-react\";\nimport { Stage, Layer, Rect, Line } from \"react-konva\";\n\nconst MULTIPLIER = 55;\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    const { plays } = props;\n\n    this.state = { board: plays[0], index: 0 };\n  }\n\n  componentDidMount = () => {\n    // timeout loop\n    this.timeout();\n  };\n\n  timeout = () => {\n    const { plays } = this.props;\n    const { index } = this.state;\n\n    setTimeout(() => {\n      if (index < plays.length) {\n        this.setState({ board: plays[index], index: index + 1 });\n        this.timeout();\n      }\n    }, 300);\n  };\n\n  renderGrid = board => {\n    let grid = [];\n\n    for (let i = 0; i < board.height + 1; i++) {\n      grid.push(\n        <Line\n          key={`${i} columns `}\n          x={0}\n          y={i * MULTIPLIER}\n          points={[0, 0, board.height * MULTIPLIER, 0]}\n          stroke=\"black\"\n        />\n      );\n    }\n\n    for (let j = 0; j <= board.width; j++) {\n      grid.push(\n        <Line\n          key={`${j} lines `}\n          x={j * MULTIPLIER}\n          y={0}\n          points={[0, board.width * MULTIPLIER + MULTIPLIER, 0, 0]}\n          stroke=\"black\"\n        />\n      );\n    }\n\n    return grid;\n  };\n\n  renderMap = board => {\n    let element = [];\n\n    board.pieces.forEach((piece, index) => {\n      element.push(\n        <Rect\n          key={`${index}`}\n          x={piece.x1 * MULTIPLIER}\n          y={piece.y1 * MULTIPLIER}\n          width={piece.width * MULTIPLIER}\n          height={piece.height * MULTIPLIER}\n          fill={piece.color}\n          shadowBlur={2}\n        />\n      );\n    });\n\n    return element;\n  };\n\n  render() {\n    const { board } = this.state;\n\n    return (\n      <Container fluid style={{ padding: \"2rem\" }}>\n        <Stage\n          width={board.width * MULTIPLIER}\n          height={board.height * MULTIPLIER}\n        >\n          <Layer>{this.renderGrid(board)}</Layer>\n          <Layer>{this.renderMap(board)}</Layer>\n        </Stage>\n      </Container>\n    );\n  }\n}\n\nMap.propTypes = {\n  plays: PropTypes.array.isRequired\n};\n\nexport default Map;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Klotski, {\n  methods,\n  createEasyBoard,\n  createTestBoard,\n  createTest2Board,\n  create21Board,\n  createHardBoard,\n  createHard2Board\n} from \"@klotski/logic\";\nimport {\n  Container,\n  Header,\n  Menu,\n  Grid,\n  Segment,\n  Button\n} from \"semantic-ui-react\";\nimport ReactLoading from \"react-loading\";\nimport Map from \"./map\";\n\nconst maps = {\n  easyMap: \"easyMap\",\n  test: \"test\",\n  test2: \"test2\",\n  easy21: \"easy21\",\n  hard: \"hard\",\n  hard2: \"hard2\"\n};\n\nconst style = {\n  body: { padding: \"2rem\", backgroundColor: \"#b2dbbf\", minHeight: \"800px\" },\n  header: {\n    marginBottom: \"5rem\"\n  },\n  headerText: {\n    color: \"#247ba0\"\n  },\n  menu: { borderColor: \"#f3ffbd\" },\n  menuHeader: {\n    backgroundColor: \"#70c1b3\",\n    color: \"black\",\n    fontSize: \"1.2rem\"\n  },\n  loadingContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n};\n\n// klotski game\nconst game = new Klotski();\n\nclass App extends React.Component {\n  state = {\n    loading: false,\n    method: null,\n    map: null,\n    solved: false\n  };\n\n  createGame = () => {\n    this.setState({ game: game });\n  };\n\n  selectMethod = method => {\n    const { solved, loading } = this.state;\n    this.setState({ method: method });\n  };\n\n  selectMap = map => {\n    const { solved, loading } = this.state;\n\n    this.setState({ map: map });\n  };\n\n  runSearch = async () => {\n    const { method, map } = this.state;\n\n    // start loading function\n    this.setState({ loading: true });\n\n    let board = null;\n\n    switch (map) {\n      case maps.easyMap:\n        board = createEasyBoard();\n        break;\n      case maps.test:\n        board = createTestBoard();\n        break;\n      case maps.test2:\n        board = createTest2Board();\n        break;\n      case maps.easy21:\n        board = create21Board();\n        break;\n      case maps.hard:\n        board = createHardBoard();\n        break;\n      case maps.hard2:\n        board = createHard2Board();\n        break;\n      default:\n        break;\n    }\n\n    if (board === null) throw new Error(\"Map is null!\");\n\n    const solved = game.solve(board, method);\n\n    this.setState({ loading: false, solved: solved });\n  };\n\n  render() {\n    const { loading, method, map, solved } = this.state;\n\n    if (game == null) return null;\n\n    return (\n      <Container fluid style={style.body}>\n        <Container textAlign=\"center\" style={style.header}>\n          <Header as=\"h1\" style={style.headerText}>\n            Klotski\n          </Header>\n        </Container>\n\n        <Grid columns={2}>\n          <Grid.Column width={4}>\n            <Menu vertical fluid style={style.menu}>\n              <Menu.Item style={style.menuHeader}>Algorithms</Menu.Item>\n              <Menu.Item\n                active={method === methods.breadthFirst}\n                onClick={() => this.selectMethod(methods.breadthFirst)}\n              >\n                Breadth First Search\n              </Menu.Item>\n              <Menu.Item\n                active={method === methods.depthFirstSearch}\n                onClick={() => this.selectMethod(methods.depthFirstSearch)}\n              >\n                Depth First Search\n              </Menu.Item>\n              <Menu.Item\n                onClick={() => this.selectMethod(methods.iterativeDeepening)}\n                active={method === methods.iterativeDeepening}\n              >\n                Iterative Search\n              </Menu.Item>\n              <Menu.Item\n                onClick={() => this.selectMethod(methods.depthLimitedSearch)}\n                active={method === methods.depthLimitedSearch}\n              >\n                Depth Limited Search\n              </Menu.Item>\n              <Menu.Item\n                onClick={() => this.selectMethod(methods.greedySearch)}\n                active={method === methods.greedySearch}\n              >\n                Greedy Search\n              </Menu.Item>\n              <Menu.Item\n                onClick={() => this.selectMethod(methods.aStar)}\n                active={method === methods.aStar}\n              >\n                A*\n              </Menu.Item>\n            </Menu>\n          </Grid.Column>\n          <Grid.Column width={12}>\n            <Segment>\n              <Menu>\n                <Menu.Item style={style.menuHeader}>Maps</Menu.Item>\n                <Menu.Item\n                  active={map === maps.easyMap}\n                  onClick={() => this.selectMap(maps.easyMap)}\n                >\n                  Easy\n                </Menu.Item>\n                <Menu.Item\n                  active={map === maps.easy21}\n                  onClick={() => this.selectMap(maps.easy21)}\n                >\n                  Easy v2\n                </Menu.Item>\n                <Menu.Item\n                  active={map === maps.test}\n                  onClick={() => this.selectMap(maps.test)}\n                >\n                  Normal\n                </Menu.Item>\n                <Menu.Item\n                  active={map === maps.test2}\n                  onClick={() => this.selectMap(maps.test2)}\n                >\n                  Normal v2\n                </Menu.Item>\n                <Menu.Item\n                  active={map === maps.hard}\n                  onClick={() => this.selectMap(maps.hard)}\n                >\n                  Hard\n                </Menu.Item>\n                <Menu.Item\n                  active={map === maps.hard2}\n                  onClick={() => this.selectMap(maps.hard2)}\n                >\n                  Hard v2\n                </Menu.Item>\n              </Menu>\n\n              {/* Run button */}\n              {!solved ? (\n                <Button\n                  onClick={() => this.runSearch(method)}\n                  disabled={method == null || map == null}\n                >\n                  Run Search\n                </Button>\n              ) : loading ? (\n                <ReactLoading\n                  width=\"10rem\"\n                  height=\"10rem\"\n                  color=\"red\"\n                  type=\"spin\"\n                />\n              ) : (\n                <Map plays={game.plays} />\n              )}\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  game: PropTypes.func.isRequired\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport Klotski from \"@klotski/logic\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App game={Klotski} />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}